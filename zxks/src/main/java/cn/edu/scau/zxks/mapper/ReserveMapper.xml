<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.scau.zxks.dao.ReserveMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.scau.zxks.entity.Reserve" >
    <id column="reserve_id" property="reserveId" jdbcType="VARCHAR" />
    <result column="textbook_id" property="textbookId" jdbcType="VARCHAR" />
    <result column="dealer_id" property="dealerId" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="reserve_time" property="reserveTime" jdbcType="TIMESTAMP" />
    <result column="num" property="num" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    reserve_id, textbook_id, dealer_id, price, reserve_time, num
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.scau.zxks.entity.ReserveExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reserve
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from reserve
    where reserve_id = #{reserveId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from reserve
    where reserve_id = #{reserveId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.scau.zxks.entity.ReserveExample" >
    delete from reserve
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.scau.zxks.entity.Reserve" >
    insert into reserve (reserve_id, textbook_id, dealer_id, 
      price, reserve_time, num
      )
    values (#{reserveId,jdbcType=VARCHAR}, #{textbookId,jdbcType=VARCHAR}, #{dealerId,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{reserveTime,jdbcType=TIMESTAMP}, #{num,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.scau.zxks.entity.Reserve" >
    insert into reserve
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="reserveId != null" >
        reserve_id,
      </if>
      <if test="textbookId != null" >
        textbook_id,
      </if>
      <if test="dealerId != null" >
        dealer_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="reserveTime != null" >
        reserve_time,
      </if>
      <if test="num != null" >
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="reserveId != null" >
        #{reserveId,jdbcType=VARCHAR},
      </if>
      <if test="textbookId != null" >
        #{textbookId,jdbcType=VARCHAR},
      </if>
      <if test="dealerId != null" >
        #{dealerId,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="reserveTime != null" >
        #{reserveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.scau.zxks.entity.ReserveExample" resultType="java.lang.Integer" >
    select count(*) from reserve
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update reserve
    <set >
      <if test="record.reserveId != null" >
        reserve_id = #{record.reserveId,jdbcType=VARCHAR},
      </if>
      <if test="record.textbookId != null" >
        textbook_id = #{record.textbookId,jdbcType=VARCHAR},
      </if>
      <if test="record.dealerId != null" >
        dealer_id = #{record.dealerId,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.reserveTime != null" >
        reserve_time = #{record.reserveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update reserve
    set reserve_id = #{record.reserveId,jdbcType=VARCHAR},
      textbook_id = #{record.textbookId,jdbcType=VARCHAR},
      dealer_id = #{record.dealerId,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      reserve_time = #{record.reserveTime,jdbcType=TIMESTAMP},
      num = #{record.num,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.scau.zxks.entity.Reserve" >
    update reserve
    <set >
      <if test="textbookId != null" >
        textbook_id = #{textbookId,jdbcType=VARCHAR},
      </if>
      <if test="dealerId != null" >
        dealer_id = #{dealerId,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="reserveTime != null" >
        reserve_time = #{reserveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
    </set>
    where reserve_id = #{reserveId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.scau.zxks.entity.Reserve" >
    update reserve
    set textbook_id = #{textbookId,jdbcType=VARCHAR},
      dealer_id = #{dealerId,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      reserve_time = #{reserveTime,jdbcType=TIMESTAMP},
      num = #{num,jdbcType=INTEGER}
    where reserve_id = #{reserveId,jdbcType=VARCHAR}
  </update>
</mapper>