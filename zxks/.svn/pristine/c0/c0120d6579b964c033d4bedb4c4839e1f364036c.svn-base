<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.scau.zxks.dao.TextbookMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.scau.zxks.entity.Textbook" >
    <id column="textbook_id" property="textbookId" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="VARCHAR" />
    <result column="booktype" property="booktype" jdbcType="VARCHAR" />
    <result column="bookname" property="bookname" jdbcType="VARCHAR" />
    <result column="book_storage" property="bookStorage" jdbcType="INTEGER" />
    <result column="is_overdue" property="isOverdue" jdbcType="VARCHAR" />
    <result column="overdue_time" property="overdueTime" jdbcType="TIMESTAMP" />
    <result column="overdue_reason" property="overdueReason" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    textbook_id, course_id, booktype, bookname, book_storage, is_overdue, overdue_time, 
    overdue_reason
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.scau.zxks.entity.TextbookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from textbook
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from textbook
    where textbook_id = #{textbookId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from textbook
    where textbook_id = #{textbookId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.scau.zxks.entity.TextbookExample" >
    delete from textbook
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.scau.zxks.entity.Textbook" >
    insert into textbook (textbook_id, course_id, booktype, 
      bookname, book_storage, is_overdue, 
      overdue_time, overdue_reason)
    values (#{textbookId,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, #{booktype,jdbcType=VARCHAR}, 
      #{bookname,jdbcType=VARCHAR}, #{bookStorage,jdbcType=INTEGER}, #{isOverdue,jdbcType=VARCHAR}, 
      #{overdueTime,jdbcType=TIMESTAMP}, #{overdueReason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.scau.zxks.entity.Textbook" >
    insert into textbook
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="textbookId != null" >
        textbook_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="booktype != null" >
        booktype,
      </if>
      <if test="bookname != null" >
        bookname,
      </if>
      <if test="bookStorage != null" >
        book_storage,
      </if>
      <if test="isOverdue != null" >
        is_overdue,
      </if>
      <if test="overdueTime != null" >
        overdue_time,
      </if>
      <if test="overdueReason != null" >
        overdue_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="textbookId != null" >
        #{textbookId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="booktype != null" >
        #{booktype,jdbcType=VARCHAR},
      </if>
      <if test="bookname != null" >
        #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="bookStorage != null" >
        #{bookStorage,jdbcType=INTEGER},
      </if>
      <if test="isOverdue != null" >
        #{isOverdue,jdbcType=VARCHAR},
      </if>
      <if test="overdueTime != null" >
        #{overdueTime,jdbcType=TIMESTAMP},
      </if>
      <if test="overdueReason != null" >
        #{overdueReason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.scau.zxks.entity.TextbookExample" resultType="java.lang.Integer" >
    select count(*) from textbook
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update textbook
    <set >
      <if test="record.textbookId != null" >
        textbook_id = #{record.textbookId,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.booktype != null" >
        booktype = #{record.booktype,jdbcType=VARCHAR},
      </if>
      <if test="record.bookname != null" >
        bookname = #{record.bookname,jdbcType=VARCHAR},
      </if>
      <if test="record.bookStorage != null" >
        book_storage = #{record.bookStorage,jdbcType=INTEGER},
      </if>
      <if test="record.isOverdue != null" >
        is_overdue = #{record.isOverdue,jdbcType=VARCHAR},
      </if>
      <if test="record.overdueTime != null" >
        overdue_time = #{record.overdueTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.overdueReason != null" >
        overdue_reason = #{record.overdueReason,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update textbook
    set textbook_id = #{record.textbookId,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=VARCHAR},
      booktype = #{record.booktype,jdbcType=VARCHAR},
      bookname = #{record.bookname,jdbcType=VARCHAR},
      book_storage = #{record.bookStorage,jdbcType=INTEGER},
      is_overdue = #{record.isOverdue,jdbcType=VARCHAR},
      overdue_time = #{record.overdueTime,jdbcType=TIMESTAMP},
      overdue_reason = #{record.overdueReason,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.scau.zxks.entity.Textbook" >
    update textbook
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="booktype != null" >
        booktype = #{booktype,jdbcType=VARCHAR},
      </if>
      <if test="bookname != null" >
        bookname = #{bookname,jdbcType=VARCHAR},
      </if>
      <if test="bookStorage != null" >
        book_storage = #{bookStorage,jdbcType=INTEGER},
      </if>
      <if test="isOverdue != null" >
        is_overdue = #{isOverdue,jdbcType=VARCHAR},
      </if>
      <if test="overdueTime != null" >
        overdue_time = #{overdueTime,jdbcType=TIMESTAMP},
      </if>
      <if test="overdueReason != null" >
        overdue_reason = #{overdueReason,jdbcType=VARCHAR},
      </if>
    </set>
    where textbook_id = #{textbookId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.scau.zxks.entity.Textbook" >
    update textbook
    set course_id = #{courseId,jdbcType=VARCHAR},
      booktype = #{booktype,jdbcType=VARCHAR},
      bookname = #{bookname,jdbcType=VARCHAR},
      book_storage = #{bookStorage,jdbcType=INTEGER},
      is_overdue = #{isOverdue,jdbcType=VARCHAR},
      overdue_time = #{overdueTime,jdbcType=TIMESTAMP},
      overdue_reason = #{overdueReason,jdbcType=VARCHAR}
    where textbook_id = #{textbookId,jdbcType=VARCHAR}
  </update>
</mapper>